# ==============================================================================
# Pre-Development Setup Checklist
#
# Purpose:
#   This file contains the essential tasks required to complete the setup
#   after running the scaffolding script, before beginning actual development.
#
# Usage:
#   This YAML file is designed to be parsed by an automation script
#   (e.g., create_github_issues.py) to programmatically
#   create issues in the project's issue tracker.
#
# Customization:
#   Update the project details and add any project-specific setup requirements.
# ==============================================================================

project:
  name: 'Your Project Name'
  description: 'Your project description from PRD'
  version: '1.0.0'
  status: 'Foundation Complete - Ready for Development'

phases:
  - name: 'Foundation Review & Setup'
    status: 'ready-to-start'
    priority: 'critical'
    tasks:
      - id: 'FOUNDATION-001'
        title: 'Review generated project structure'
        description: |
          Explore the generated files and understand the structure:
          - Review backend/src/ structure (controllers, routes, models, services)
          - Review frontend/src/ structure (components, pages, services)
          - Understand the database migration system
          - Review CI/CD workflows in .github/workflows/
          - Familiarize yourself with the development scripts
        status: 'pending'
        assignee: 'lead-developer'
        estimated_hours: 2
        dependencies: []

      - id: 'FOUNDATION-002'
        title: 'Customize environment variables'
        description: |
          Update environment files for your specific setup:
          - Copy backend/.env.development to backend/.env
          - Update DATABASE_URL with your actual database credentials
          - Configure any API keys or external service credentials
          - Update frontend environment variables if applicable
          - Verify all environment variables are properly set
        status: 'pending'
        assignee: 'developer'
        estimated_hours: 1
        dependencies: ['FOUNDATION-001']

      - id: 'FOUNDATION-003'
        title: 'Set up and test database'
        description: |
          Initialize your database and verify the foundation:
          - Run initial migrations: cd backend && ./scripts/migrate.sh
          - Verify database connection and basic user table
          - Test the development environment: ./scripts/start-development.sh local
          - Verify both frontend and backend are running correctly
          - Test basic API endpoints (health check, etc.)
        status: 'pending'
        assignee: 'developer'
        estimated_hours: 2
        dependencies: ['FOUNDATION-002']

  - name: 'Domain Planning & Database Design'
    status: 'pending'
    priority: 'high'
    tasks:
      - id: 'DOMAIN-001'
        title: 'Define core domain entities'
        description: |
          Based on your PRD, identify and document your main entities:
          - List all core business entities (users, products, orders, etc.)
          - Define relationships between entities
          - Document business rules and constraints
          - Create entity relationship diagram
          - Validate with stakeholders if needed
        status: 'pending'
        assignee: 'lead-developer'
        estimated_hours: 4
        dependencies: ['FOUNDATION-003']

      - id: 'DOMAIN-002'
        title: 'Design database schema'
        description: |
          Create database schema for your domain entities:
          - Design tables for each core entity
          - Define primary keys, foreign keys, and indexes
          - Plan for data types and constraints
          - Consider performance and scalability requirements
          - Document the schema design
        status: 'pending'
        assignee: 'backend-developer'
        estimated_hours: 6
        dependencies: ['DOMAIN-001']

      - id: 'DOMAIN-003'
        title: 'Create database migrations'
        description: |
          Implement the database schema:
          - Create migration files for each entity
          - Add proper indexes and constraints
          - Include seed data for development
          - Test migrations in development environment
          - Verify data integrity and relationships
        status: 'pending'
        assignee: 'backend-developer'
        estimated_hours: 8
        dependencies: ['DOMAIN-002']

  - name: 'Development Environment Setup'
    status: 'pending'
    priority: 'high'
    tasks:
      - id: 'ENV-001'
        title: 'Configure development tools'
        description: |
          Set up development environment and tools:
          - Configure IDE/editor settings and extensions
          - Set up linting and formatting rules
          - Configure debugging tools for both frontend and backend
          - Set up Git hooks for pre-commit checks
          - Verify all development scripts work correctly
        status: 'pending'
        assignee: 'developer'
        estimated_hours: 3
        dependencies: ['FOUNDATION-003']

      - id: 'ENV-002'
        title: 'Set up testing infrastructure'
        description: |
          Prepare testing environment:
          - Configure Jest for backend testing
          - Set up Vitest for frontend testing
          - Create test database configuration
          - Add testing scripts to package.json
          - Verify test runners work correctly
        status: 'pending'
        assignee: 'developer'
        estimated_hours: 2
        dependencies: ['ENV-001']

  - name: 'Project Configuration'
    status: 'pending'
    priority: 'medium'
    tasks:
      - id: 'CONFIG-001'
        title: 'Update project metadata'
        description: |
          Customize project information:
          - Update package.json with project name and description
          - Update README.md with project-specific information
          - Configure repository settings and branch protection
          - Set up project labels and milestones
          - Update license if needed
        status: 'pending'
        assignee: 'lead-developer'
        estimated_hours: 2
        dependencies: ['FOUNDATION-001']

      - id: 'CONFIG-002'
        title: 'Configure external services'
        description: |
          Set up any required external services:
          - Configure monitoring and logging services
          - Set up error tracking (Sentry, etc.)
          - Configure analytics if needed
          - Set up backup and storage services
          - Verify all external integrations work
        status: 'pending'
        assignee: 'devops-engineer'
        estimated_hours: 4
        dependencies: ['CONFIG-001']

  - name: 'Team Setup & Documentation'
    status: 'pending'
    priority: 'medium'
    tasks:
      - id: 'TEAM-001'
        title: 'Create development guidelines'
        description: |
          Establish development standards:
          - Document coding standards and conventions
          - Create Git workflow and branching strategy
          - Define code review process
          - Document testing requirements
          - Create deployment procedures
        status: 'pending'
        assignee: 'lead-developer'
        estimated_hours: 4
        dependencies: ['CONFIG-001']

      - id: 'TEAM-002'
        title: 'Set up project management'
        description: |
          Configure project management tools:
          - Set up issue templates and labels
          - Configure project boards and workflows
          - Set up milestone tracking
          - Create team communication channels
          - Document team roles and responsibilities
        status: 'pending'
        assignee: 'project-manager'
        estimated_hours: 3
        dependencies: ['TEAM-001']

  - name: 'Quality Enforcement Setup'
    status: 'pending'
    priority: 'critical'
    tasks:
      - id: 'QUALITY-001'
        title: 'Verify enforcement tools installation'
        description: |
          Ensure all quality enforcement tools are properly installed and configured:
          - Verify Husky pre-commit hooks are active
          - Test lint-staged configuration
          - Confirm ESLint and Prettier are working
          - Verify Commitlint is enforcing conventional commits
          - Test TypeScript strict mode configuration
          - Ensure Jest and Vitest are properly configured
        status: 'pending'
        assignee: 'developer'
        estimated_hours: 2
        dependencies: ['ENV-001']

      - id: 'QUALITY-002'
        title: 'Set up CI/CD pipeline'
        description: |
          Configure and test the complete CI/CD pipeline:
          - Verify GitHub Actions workflows are properly configured
          - Test all CI jobs (lint, test, build, security, docs)
          - Configure branch protection rules
          - Set up required status checks for PRs
          - Test automated dependency updates with Dependabot
          - Verify security scanning with Snyk integration
        status: 'pending'
        assignee: 'devops-engineer'
        estimated_hours: 4
        dependencies: ['QUALITY-001']

      - id: 'QUALITY-003'
        title: 'Configure quality gates'
        description: |
          Set up and test all quality gates:
          - Configure 80% minimum code coverage requirement
          - Set up coverage reporting with Codecov
          - Test branch protection with required checks
          - Verify PR template with quality checklist
          - Test automated security vulnerability scanning
          - Configure automated dependency updates
        status: 'pending'
        assignee: 'devops-engineer'
        estimated_hours: 3
        dependencies: ['QUALITY-002']

      - id: 'QUALITY-004'
        title: 'Set up documentation generation'
        description: |
          Configure automated documentation generation:
          - Test TypeDoc API documentation generation
          - Verify JSDoc comments are properly formatted
          - Set up automated documentation deployment
          - Test documentation validation in CI
          - Configure documentation coverage requirements
          - Verify API documentation is up to date
        status: 'pending'
        assignee: 'developer'
        estimated_hours: 2
        dependencies: ['QUALITY-001']

      - id: 'QUALITY-005'
        title: 'Test enforcement workflow'
        description: |
          End-to-end testing of the complete enforcement workflow:
          - Test pre-commit hooks with various commit scenarios
          - Verify CI pipeline fails appropriately for bad code
          - Test branch protection with direct pushes
          - Verify PR requirements are enforced
          - Test hotfix workflow compliance
          - Validate all quality gates are working correctly
        status: 'pending'
        assignee: 'lead-developer'
        estimated_hours: 3
        dependencies: ['QUALITY-003', 'QUALITY-004']

  - name: 'Documentation Setup'
    status: 'pending'
    priority: 'high'
    tasks:
      - id: 'DOCS-001'
        title: 'Set up project documentation'
        description: |
          Create comprehensive project documentation:
          - Update README with project-specific information
          - Create API documentation using TypeDoc
          - Set up development guides and standards
          - Create deployment and operations documentation
          - Set up troubleshooting guides
        status: 'pending'
        assignee: 'developer'
        estimated_hours: 4
        dependencies: ['QUALITY-004']

      - id: 'DOCS-002'
        title: 'Create team onboarding materials'
        description: |
          Develop materials for new team members:
          - Create new developer onboarding guide
          - Set up quick reference guides
          - Create commit message guidelines
          - Document development workflow
          - Set up knowledge management system
        status: 'pending'
        assignee: 'lead-developer'
        estimated_hours: 3
        dependencies: ['DOCS-001']

success_metrics:
  setup_completion:
    - metric: 'Environment Setup Time'
      target: 'Complete all setup within 1-2 days'
      current: 'TBD'

  readiness:
    - metric: 'Development Readiness'
      target: '100% of team can run and test the application'
      current: 'TBD'

  quality:
    - metric: 'Setup Quality'
      target: 'Zero critical setup issues'
      current: 'TBD'

dependencies:
  external:
    - name: 'Database (PostgreSQL/MySQL/MongoDB)'
      status: 'required'
      setup_required: true
    - name: 'Development Tools'
      status: 'required'
      setup_required: true
    - name: 'External Services'
      status: 'project-dependent'
      setup_required: false

notes:
  - 'This checklist covers only pre-development setup tasks'
  - 'Once completed, the team is ready to begin feature development'
  - 'Add project-specific setup requirements based on your PRD'
  - 'Consider team size and experience when estimating hours'
  - 'All tasks should be completed before starting business logic development'
