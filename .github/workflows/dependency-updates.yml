name: Dependency Updates

on:
  schedule:
    # Run every Monday at 09:00 UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  check-dependencies:
    name: Check for Dependency Updates
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for outdated dependencies
        id: check-outdated
        run: |
          echo "Checking for outdated dependencies..."
          npm outdated --json > outdated.json || echo "{}" > outdated.json

          # Count outdated packages
          OUTDATED_COUNT=$(node -e "
            const outdated = JSON.parse(require('fs').readFileSync('outdated.json', 'utf8'));
            console.log(Object.keys(outdated).length);
          ")

          echo "outdated_count=$OUTDATED_COUNT" >> $GITHUB_OUTPUT

          if [ "$OUTDATED_COUNT" -gt 0 ]; then
            echo "Found $OUTDATED_COUNT outdated dependencies"
            echo "should_update=true" >> $GITHUB_OUTPUT
          else
            echo "No outdated dependencies found"
            echo "should_update=false" >> $GITHUB_OUTPUT
          fi

      - name: Create dependency update PR
        if: steps.check-outdated.outputs.should_update == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: 'chore: update dependencies'
          body: |
            ## 🔄 Automated Dependency Updates

            This PR was created automatically to update outdated dependencies.

            ### 📊 Update Summary
            - **Outdated packages**: ${{ steps.check-outdated.outputs.outdated_count }}
            - **Generated**: ${{ github.event_name == 'schedule' && 'Automatically (weekly schedule)' || 'Manually triggered' }}
            - **Date**: ${{ github.event_name == 'schedule' && format('YYYY-MM-DD') || 'Manual' }}

            ### 🔍 What to Review
            - [ ] Review the updated dependencies
            - [ ] Check for breaking changes
            - [ ] Verify all tests pass
            - [ ] Ensure security scan passes

            ### 📋 Checklist
            - [ ] All CI checks pass
            - [ ] No breaking changes introduced
            - [ ] Security vulnerabilities addressed
            - [ ] Performance impact assessed

            ### 🚨 Important Notes
            - This PR will be automatically merged if all checks pass
            - Breaking changes will require manual review
            - Security updates are prioritized

            ---

            *This PR was created by the automated dependency update workflow.*
          branch: dependabot/update-dependencies-${{ github.run_number }}
          delete-branch: true
          labels: |
            dependencies
            automated
            ci-cd
          assignees: |
            AutomateAndThrive
          reviewers: |
            AutomateAndThrive

      - name: Comment on existing PRs
        if: steps.check-outdated.outputs.should_update == 'true'
        run: |
          # Find existing dependency update PRs
          EXISTING_PRS=$(gh pr list --label "dependencies" --state "open" --json number,title)

          if [ ! -z "$EXISTING_PRS" ]; then
            echo "Found existing dependency update PRs:"
            echo "$EXISTING_PRS"
            
            # Comment on existing PRs
            echo "$EXISTING_PRS" | jq -r '.[].number' | while read pr_number; do
              gh pr comment $pr_number --body "⚠️ **Note**: A new dependency update PR has been created. Please review and merge the latest one."
            done
          fi

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --json-file-output=snyk-report.json

      - name: Upload Snyk report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: snyk-security-report
          path: snyk-report.json
          retention-days: 30

  notify-updates:
    name: Notify Updates
    runs-on: ubuntu-latest
    needs: [check-dependencies, security-audit]
    if: always()

    steps:
      - name: Notify on dependency updates
        if: needs.check-dependencies.outputs.should_update == 'true'
        run: |
          echo "## 📢 Dependency Update Notification" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Dependencies**: ${{ needs.check-dependencies.outputs.outdated_count }} packages updated" >> $GITHUB_STEP_SUMMARY
          echo "🔒 **Security**: Audit completed" >> $GITHUB_STEP_SUMMARY
          echo "📋 **Action**: Review the created PR" >> $GITHUB_STEP_SUMMARY
        else:
          run: |
            echo "## 📢 Dependency Update Notification" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ **Status**: All dependencies are up to date" >> $GITHUB_STEP_SUMMARY
            echo "🔒 **Security**: Audit completed" >> $GITHUB_STEP_SUMMARY
            echo "📋 **Action**: No updates needed" >> $GITHUB_STEP_SUMMARY
